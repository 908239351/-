C51 COMPILER V9.01   MAIN                                                                  05/28/2019 16:58:51 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "c8051F340.h"
   2          #include <intrins.h>
   3          #include <absacc.h>
   4          #include <stdlib.h>
   5          
   6          #include <main.h>
   7          #include <usb_api.h>
   8          #include <mmc_sd\mmc_sd.h>
   9          #include <lcd\lcd.h>
  10          #include <tp\tp.h>
  11          
  12          xdata unsigned char Packet[64];   // Last packet received from host 
  13          unsigned char f_down=0;
  14          unsigned char f_debug=0;
  15          unsigned char f_read=0;
  16          unsigned char f_para=0;
  17          unsigned char f_init=0;
  18          unsigned char f_other=0;
  19          unsigned char pic=0;
  20          unsigned int  bf=0;
  21          unsigned long int sd=1;
  22          
  23          unsigned char VerifyCode0=0xaa;
  24          unsigned char VerifyCode1=0x55;
  25          unsigned char VerifyCode2=0xff;
  26          
  27           unsigned char n;
  28          unsigned int  kmxz=0;                                                           
  29          /********************************************************************************/
  30          code const UINT USB_VID = 0x10C4;
  31          code const UINT USB_PID = 0xEA61;
  32          code const BYTE USB_MfrStr[] = {0x1A,0x03,'S',0,'i',0,'l',0,'i',0,'c',0,'o',0,'n',0,' ',0,'L',0,'a',0,'b',
             -0,'s',0};                       // Manufacturer String
  33          code const BYTE USB_ProductStr[] = {0x10,0x03,'U',0,'S',0,'B',0,' ',0,'A',0,'P',0,'I',0}; // Product Desc.
             - String
  34          code const BYTE USB_SerialStr[] = {0x0a,0x03,'F',0,'3',0,'4',0,'0',0};
  35          code const BYTE USB_MaxPower = 15;            // Max current = 30 mA (15 * 2)
  36          code const BYTE USB_PwAttributes = 0x80;      // Bus-powered, remote wakeup not supported
  37          code const UINT USB_bcdDevice = 0x0100;       // Device release number 1.00
  38          
  39          /********************************************************************************/
  40          void main(void)
  41          {        kmxz=2;
  42   1              #ifdef SD_DEMO_PIC
  43   1              //      unsigned char n;
  44   1              #endif
  45   1      
  46   1              Devices_Init();
  47   1              //MMC_SD_ReadSingleBlock(0);
  48   1              while(KEY_STEP)
  49   1              {       
  50   2              
  51   2              switch (kmxz) 
  52   2                      {
  53   3                              case 0 :
C51 COMPILER V9.01   MAIN                                                                  05/28/2019 16:58:51 PAGE 2   

  54   3                                      {
  55   4                              //红
  56   4                                      DispColor(RED);
  57   4                                      WaitKey();
  58   4      
  59   4                              //绿
  60   4                                      DispColor(GREEN);
  61   4                                      WaitKey();
  62   4                          //蓝
  63   4                                      DispColor(BLUE);
  64   4                                      WaitKey();
  65   4      
  66   4                          //白
  67   4                                      DispColor(WHITE);
  68   4                                      WaitKey();
  69   4      
  70   4                              //黑    
  71   4                                      DispColor(BLACK);
  72   4                              WaitKey();
  73   4      
  74   4                               //三色彩条     
  75   4                               DispBand();      //多色
  76   4                       WaitKey();
  77   4      
  78   4                               //视区框       
  79   4                                      DispFrame();
  80   4                              WaitKey();
  81   4      
  82   4                                      break;           }
  83   3      
  84   3                              case 1 :
  85   3                                      {
  86   4                                                      //红
  87   4                                      DispColor(RED);
  88   4                                      Delay(2000);
  89   4      
  90   4                              //绿
  91   4                                      DispColor(GREEN);
  92   4                                      Delay(2000);
  93   4      
  94   4                          //蓝
  95   4                                      DispColor(BLUE);
  96   4                                      Delay(2000);
  97   4      
  98   4                          //白
  99   4                                      DispColor(WHITE);
 100   4                                      Delay(2000);
 101   4      
 102   4                              //黑    
 103   4                                      DispColor(BLACK);
 104   4                                      Delay(2000);
 105   4      
 106   4                               //三色彩条     
 107   4                                      DispBand();       //多色
 108   4                                      Delay(2000);
 109   4      
 110   4                               //视区框       
 111   4                                      DispFrame();
 112   4                                      Delay(2000);
 113   4                                      break;
 114   4                                              }
 115   3                              
C51 COMPILER V9.01   MAIN                                                                  05/28/2019 16:58:51 PAGE 3   

 116   3                              case 2  :
 117   3                                      {
 118   4                                      DispBand();       //多色
 119   4                                      Delay(2000);
 120   4                              //黑    
 121   4                                      DispColor(BLACK);
 122   4                                      Delay(2000);
 123   4                          //白
 124   4                                      DispColor(WHITE);
 125   4                                      Delay(2000);
 126   4                                      break;  }
 127   3                              default:        
 128   3                                      DispBand();       //多色
 129   3                                      Delay(2000);
 130   3                              }
 131   2                      #ifdef READ_REG          
 132   2                              //DispRegValue(0xbf,6); //
 133   2                              //DispRegValue(0xD3,4); //
 134   2                              //DispRegValue(0xbf,6); //
 135   2                  DispRegValue(0x04,8); // read ID       7789
 136   2      
 137   2                               Delay(3200);
 138   2                       //
 139   2                      //        StopDelay(20); 
 140   2                      //      Delay(2500);
 141   2                      #endif 
 142   2              
 143   2                      #ifdef USE_SD_INIT
 144   2                              SD_Init(); 
 145   2                              Delay(10);
 146   2                      #endif
 147   2                      //WaitKey();
 148   2              //      Delay(5000);           
 149   2                
 150   2                      #ifdef SLEEP_TEST
                              EnterSLP();
                              WaitKey();Delay(200);
                              ExitSLP();
                              WaitKey();Delay(200);
                              #endif
 156   2              
 157   2              
 158   2      
 159   2              
 160   2      //              DispColor(WHITE);
 161   2              //      WaitKey();
 162   2      //              Delay(2000);    
 163   2              
 164   2      
 165   2              
 166   2              
 167   2                      
 168   2                                                
 169   2                      
 170   2                      #ifdef DEBUG  
                                      Debug();
                              #endif 
 173   2              
 174   2                      #ifdef EVAL_PIC
                                      DispPic(pic_eval);
                                      WaitKey();Delay(200);
                              #endif
C51 COMPILER V9.01   MAIN                                                                  05/28/2019 16:58:51 PAGE 4   

 178   2      
 179   2                       
 180   2                                      
 181   2                      #ifdef EXTEND_TEST
                                      DispScaleHor1();
                                      WaitKey();Delay(200);
                      
                                      DispScaleVer();
                                      WaitKey();Delay(200);
                      
                                      DispScaleVer_Red();
                                      WaitKey();Delay(200);
                      
                                      DispScaleVer_Green();
                                      WaitKey();Delay(200);
                      
                                      DispScaleVer_Blue();
                                      WaitKey();Delay(200);
                      
                                      DispScaleVer_Gray();
                                      WaitKey();Delay(200);
                      
                                      DispGrayHor16();
                                      WaitKey();Delay(200);
                      
                                      DispGrayHor32();
                                      WaitKey();Delay(200);
                      
                                      DispScaleHor2();
                                      WaitKey();Delay(200);
                      
                                      DispSnow();
                                      WaitKey();Delay(200);
                      
                                      DispBlock();
                                      WaitKey();Delay(200);
                              #endif
 215   2              
 216   2                      #ifdef SD_DEMO_PIC
 217   2                              for(n=0;n<1;n++)
 218   2                              {
 219   3                                      DispPicFromSD(n);
 220   3                                      //StopDelay(20); 
 221   3                                      //Delay(1000);
 222   3                              //DispColor(WHITE);
 223   3                                      WaitKey();
 224   3                                  //Delay(2500);
 225   3                              }
 226   2                              break;
 227   2                      #endif
 228   2              }
 229   1      
 230   1              //touch panel draw line test
 231   1      
 232   1      //      #ifdef TP_TEST
 233   1      //              TP_DrawLine();
 234   1      //      #endif
 235   1      
 236   1      
 237   1              //DispStr("TEST END",0,0,BLACK,WHITE); //test end
 238   1              //while(1); 
 239   1      }
C51 COMPILER V9.01   MAIN                                                                  05/28/2019 16:58:51 PAGE 5   

 240          
 241          //----------------------------------------------------------------------
 242          void Delay(unsigned int dly)
 243          {
 244   1          unsigned int i,j;
 245   1      
 246   1          for(i=0;i<dly;i++)
 247   1              for(j=0;j<255;j++);
 248   1      }
 249          
 250          
 251          void StopDelay(unsigned int sdly)
 252          {
 253   1          unsigned int i,j,k;
 254   1              for(k=0;k<100;k++)
 255   1              {
 256   2              if(KEY_Stop)
 257   2                      {
 258   3          for(i=0;i<sdly;i++)
 259   3              for(j=0;j<255;j++);
 260   3                      }
 261   2                      else
 262   2                      {
 263   3                              WaitKey();Delay(20);
 264   3                      }       
 265   2              }
 266   1      }
 267          
 268          #ifdef AUTO_NEXT
              void WaitKey(void)
              {  
                      unsigned int i;
              
                      for(i=0;i<300;i++)
                      {
                              Delay(1);
                               
                              #ifdef CONN_USB
                                      ConnToUSB();
                              #endif  
              
                              while(!KEY_STEP);
              
                      } 
              }
              #endif
 286          
 287          #ifdef MANUA_NEXT
 288          void WaitKey(void)
 289          {  
 290   1              while(KEY_STEP)
 291   1              {
 292   2                      #ifdef CONN_USB
 293   2                      ConnToUSB();
 294   2                      #endif
 295   2              }
 296   1                      
 297   1              Delay(10);
 298   1              while(!KEY_STEP);
 299   1      
 300   1      }
 301          #endif
C51 COMPILER V9.01   MAIN                                                                  05/28/2019 16:58:51 PAGE 6   

 302          
 303          //f_debug
 304          //0     1      2        3            ，    4           5           6               7
 305          //0xaa  0x55  0xff   是否显示在LCD      指令或数据  dataH    dataL   显示的水平位置
 306          
 307          //f_read
 308          //0     1      2        3            ，    4           5           6              7                          8
 309          //0xff  0x55  0xaa   是否显示在LCD      是否有效    dataH    dataL   读参数的次数    显示的水平位置
 310          //reg_data[]={dataH,dataL,dataH,dataL,dataH,dataL...  } 
 311          
 312          //f_down
 313          //0     1      2        3            ，    4        5      6              7        ...  35           36
 314          //0xaa  0xff  0x55   是否写入SD卡                 dataH,   dataL, dataH,   dataL,  ... dataH    dataL
 315          
 316          //f_init
 317          //0     1      2        3    ，            4        5      6          7    ...  35           36
 318          //0xff  0xaa  0x55      -               指令或数据  dataH  dataL      -         
 319                  
 320          #ifdef CONN_USB
 321          void ConnToUSB(void)
 322          {
 323   1              unsigned char i;
 324   1              xdata unsigned char reg_data[24]; 
 325   1              xdata unsigned char para_data[64];      
 326   1              unsigned char dat;
 327   1              unsigned int  reg_index;
 328   1              unsigned char data_num;
 329   1              unsigned char st[1]={1};
 330   1              
 331   1              //DispStr("DEBUG FOR USB",0,0,BLACK,WHITE);
 332   1              while(f_debug)
 333   1              {
 334   2                 for(i=1;i<16;i++)
 335   2                 {
 336   3                     if(Packet[i*4]==0x00)
 337   3                         {
 338   4                                      WriteComm((Packet[i*4+1]<<8)|Packet[i*4+2]);    
 339   4                         }
 340   3                         else if(Packet[i*4]==0x01)
 341   3                         {
 342   4                                      WriteData((Packet[i*4+1]<<8)|Packet[i*4+2]);
 343   4              
 344   4                         }
 345   3                         else if(Packet[i*4]==0x80)
 346   3                         {
 347   4                                      //      
 348   4                         }
 349   3                 } 
 350   2                 _nop_();_nop_();_nop_();_nop_(); _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();
 351   2                 _nop_();_nop_();_nop_();_nop_(); _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();
 352   2      
 353   2                 DispStr("USB DEBUG",0,0,BLACK,WHITE);
 354   2      
 355   2                 if((Packet[3])&0x01)
 356   2                 {
 357   3                         for(i=1;i<16;i++)
 358   3                         {
 359   4                             if(Packet[i*4]==0x00)
 360   4                                 {    
 361   5                                              DispInt((Packet[i*4+1]<<8)|Packet[i*4+2],(FONT_W*4+4)*Packet[i*4+3],(FONT_H+1)*i,GREEN,BLACK);  
 362   5                                 }
 363   4                                 else if(Packet[i*4]==0x01)
C51 COMPILER V9.01   MAIN                                                                  05/28/2019 16:58:51 PAGE 7   

 364   4                                 {
 365   5                                              DispInt((Packet[i*4+1]<<8)|Packet[i*4+2],(FONT_W*4+4)*Packet[i*4+3],(FONT_H+1)*i,BLUE,WHITE);                   
 366   5                                 }
 367   4                                 else if(Packet[i*4]==0x80)
 368   4                                 {
 369   5                                              //      
 370   5                                 }
 371   4                         } 
 372   3                 }
 373   2                 _nop_();_nop_();_nop_();_nop_(); _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();
 374   2                 _nop_();_nop_();_nop_();_nop_(); _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();
 375   2      
 376   2                 f_debug=0;  
 377   2         }
 378   1      
 379   1      
 380   1              //////////////////////////////////////////////////////
 381   1              while(f_other)
 382   1              {       
 383   2             for(i=0;i<64;i+=2)
 384   2             {
 385   3                         CS0=0;
 386   3                         //RD0=1;
 387   3                         RS=1;
 388   3                     WriteDispData(Packet[i], Packet[i+1]);      
 389   3                         CS0=1;
 390   3      
 391   3                     buffer[bf++]=Packet[i];
 392   3                     buffer[bf++]=Packet[i+1];
 393   3                         if(bf==512)
 394   3                 {      
 395   4                     SD_Start();
 396   4                                 MMC_SD_WriteSingleBlock(sd++); 
 397   4                                 buffer[0]=pic;
 398   4                         MMC_SD_WriteSingleBlock(0);      //统计图片数量      buffer[0]=pi
 399   4                         bf=0;
 400   4                 }
 401   3             } 
 402   2      
 403   2                 f_other=0;  
 404   2             Block_Write(st, 1);
 405   2              }
 406   1      
 407   1              //////////////////////////////////////////////////////
 408   1              while(f_down)
 409   1              {
 410   2                      if(Packet[3]&&0x01)     //download to sd
 411   2                      {       
 412   3                     for(i=4;i<36;i+=2)
 413   3                     {
 414   4                                 CS0=0;
 415   4                                 //RD0=1;
 416   4                                 RS=1;
 417   4                             WriteDispData(Packet[i], Packet[i+1]);      
 418   4                                 CS0=1;
 419   4      
 420   4                                 buffer[bf++]=Packet[i];
 421   4                             buffer[bf++]=Packet[i+1];
 422   4              
 423   4                                 if(bf==512)
 424   4                         {      
 425   5                             SD_Start();
C51 COMPILER V9.01   MAIN                                                                  05/28/2019 16:58:51 PAGE 8   

 426   5                                         MMC_SD_WriteSingleBlock(sd++); 
 427   5                                         buffer[0]=pic;
 428   5                                 MMC_SD_WriteSingleBlock(0);      
 429   5                                 bf=0;
 430   5                         }
 431   4              
 432   4                     } 
 433   3                         f_down=0; 
 434   3                         Block_Write(st, 1);
 435   3      
 436   3                 }
 437   2                 else
 438   2                 {
 439   3                         for(i=4;i<36;i+=2)
 440   3                     {
 441   4                                 CS0=0;
 442   4                                 //RD0=1;
 443   4                                 RS=1;
 444   4                             WriteDispData(Packet[i], Packet[i+1]);      
 445   4                                 CS0=1;
 446   4              
 447   4                     } 
 448   3                         f_down=0; 
 449   3                         Block_Write(st, 1);
 450   3                 }
 451   2              }
 452   1      
 453   1          //////////////////////////////////////////////////////
 454   1              while(f_init)
 455   1              {
 456   2                 for(i=4;i<36;i+=4)
 457   2             {
 458   3                     if(Packet[i]==0x00)
 459   3                         {
 460   4                                      WriteComm((Packet[i+1]<<8)|Packet[i+2]);        
 461   4                         }
 462   3                         else if(Packet[i]==0x01)
 463   3                         {
 464   4                                      WriteData((Packet[i+1]<<8)|Packet[i+2]);        
 465   4                         }
 466   3                         else if(Packet[i]==0x10)
 467   3                         {
 468   4                                      //Delay(Packet[i+1]);   
 469   4                                      //Delay(Packet[i+2]);   
 470   4                                      _nop_();_nop_();_nop_();_nop_(); _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();
 471   4                                      _nop_();_nop_();_nop_();_nop_(); _nop_();_nop_();_nop_();_nop_();_nop_();_nop_();
 472   4                         }
 473   3                         else if(Packet[i]==0x80)
 474   3                         {
 475   4                                      //
 476   4                         }
 477   3             } 
 478   2                 f_init=0;
 479   2                 Block_Write(st, 1);
 480   2              }
 481   1      
 482   1              //////////////////////////////////////////////////////
 483   1              while(f_read)
 484   1              {
 485   2                      for(i=0;i<24;i++)
 486   2                              reg_data[i]=0x00;       
 487   2      
C51 COMPILER V9.01   MAIN                                                                  05/28/2019 16:58:51 PAGE 9   

 488   2                      data_num = Packet[7]*2; 
 489   2                      reg_index=(Packet[5]<<8)|Packet[6];
 490   2                              
 491   2                      if(Packet[4]==0x01)
 492   2                      {
 493   3                              WriteComm(reg_index);
 494   3                              for(i=0;i<data_num;i=i+2)
 495   3                              {
 496   4                                      dat=ReadData();
 497   4                                      reg_data[i]=dat>>8;
 498   4                                      reg_data[i+1]=dat;
 499   4                              }
 500   3                      }
 501   2      
 502   2                      f_read=0;  
 503   2                      Block_Write(reg_data,data_num);
 504   2      
 505   2                      Delay(100);
 506   2                      DispStr("USB READ",0,0,BLACK,WHITE);
 507   2                      if((Packet[3])&0x01)
 508   2                      {
 509   3                              DispInt(reg_index,(FONT_W*4+4)*(Packet[8]),FONT_H+1,GREEN,BLACK);
 510   3                              for(i=0;i<data_num;i=i+2)
 511   3                              {
 512   4                                      DispInt((reg_data[i]<<8)|reg_data[i+1],(FONT_W*4+4)*(Packet[8]),(FONT_H+1)*(i/2+2),BLUE,WHITE);                 
 513   4                              }
 514   3                      }
 515   2              }
 516   1      
 517   1              //////////////////////////////////////////////////////
 518   1              while(f_para)
 519   1              {
 520   2                      for(i=0;i<64;i++)
 521   2                              para_data[i]=0x00;      
 522   2      
 523   2                      para_data[0]=((unsigned int)ROW)>>8;
 524   2                      para_data[1]= (unsigned int)ROW;
 525   2                      para_data[2]=((unsigned int)COL)>>8;
 526   2                      para_data[3]=((unsigned int)COL);
 527   2      
 528   2                      f_para=0;  
 529   2                      Block_Write(para_data,64);
 530   2              }
 531   1      }
 532          #endif
 533          
 534          void  MCU_Init(void)
 535          {
 536   1          unsigned char n;
 537   1              PCA0MD &= ~0x40;
 538   1      
 539   1              //OSC
 540   1          OSCICN = 0x83;        //Internal oscillator enabled, SYSCLK = Internal Oscillator = 12MHz
 541   1          CLKMUL = 0x00;    //Select internal oscillator as clock multiplier source clock
 542   1      
 543   1          CLKMUL |= 0x80;   //Enable clock multiplier
 544   1      
 545   1              for(n=0;n<255;n++);
 546   1      
 547   1              CLKMUL |= 0xC0;           //Initialize the clock multiplier
 548   1              while(!(CLKMUL & 0x20));  //Wait for multiplier to lock
 549   1          CLKSEL = 0x00;            //Change SYSCLK to (4x Multiplier    ) = 48MHz  (48MHz is as fast as F34 wil
C51 COMPILER V9.01   MAIN                                                                  05/28/2019 16:58:51 PAGE 10  

             -l run); 0x03;
 550   1         
 551   1          RSTSRC   |= 0x02;  
 552   1      
 553   1              //P0~P4                                  //set high impedance , skipped by crossbar
 554   1              P0MDIN |= 0xFF;          //数字输入(无模拟输入）
 555   1              P0MDOUT |= 0xFF;                 //推挽输出（可选开漏输出，输出设为推挽，输入设为开漏）
 556   1      
 557   1          P1MDOUT |= 0xFF;         
 558   1          P1MDIN |= 0xFF; 
 559   1      
 560   1          P2MDOUT |= 0xFF;                            
 561   1              P4MDOUT |= 0xFF;         
 562   1      
 563   1              P3MDIN |= 0xFF;
 564   1              P3MDOUT |= 0x17;                 //0001 0111
 565   1      
 566   1              OE=0;
 567   1              DIR=0;
 568   1      
 569   1              TP_PENIRQ = 1;
 570   1              TP_DOUT = 1;
 571   1      
 572   1          XBR0     |= 0x02;
 573   1          XBR1     |= 0x40;       // Enable Crossbar
 574   1      
 575   1      }
 576          
 577          void SD_Start(void)
 578          {
 579   1              static unsigned char f;
 580   1              
 581   1              if(f==0)
 582   1              {
 583   2                      #ifdef USE_SD_INIT
 584   2                              SD_Init();
 585   2                              Delay(10);
 586   2                      #endif
 587   2                      f=1;
 588   2              }
 589   1      }
 590          
 591          void Devices_Init(void)
 592          {
 593   1          //MCU
 594   1              MCU_Init();
 595   1      
 596   1              //USB
 597   1              USB_Clock_Start();                     // Init USB clock *before* calling USB_Init
 598   1          USB_Init(USB_VID,USB_PID,USB_MfrStr,USB_ProductStr,USB_SerialStr,USB_MaxPower,USB_PwAttributes,USB_bcd
             -Device);
 599   1          USB_Int_Enable();
 600   1      
 601   1              //SPI
 602   1              SPI0CFG   = 0x70;
 603   1          SPI0CN    = 0x0f;
 604   1      
 605   1              //LCM
 606   1          LCD_Init();
 607   1      
 608   1              //SD
 609   1              #ifdef USE_SD_INIT
C51 COMPILER V9.01   MAIN                                                                  05/28/2019 16:58:51 PAGE 11  

 610   1                      //SD_Init();
 611   1                      //Delay(50);
 612   1              #endif
 613   1      
 614   1      }
 615          
 616          void Suspend_Device(void)
 617          {
 618   1         USB_Suspend();
 619   1      }
 620          
 621          //----------------------------------------------------------------------
 622          void  USB_API_TEST_ISR(void) interrupt 17
 623          {
 624   1         unsigned char INTVAL = Get_Interrupt_Source();
 625   1      
 626   1         if (INTVAL & RX_COMPLETE)
 627   1         {
 628   2                 Block_Read(Packet,64);
 629   2      
 630   2                 if(Packet[0]==VerifyCode0 && Packet[1]==VerifyCode1 && Packet[2]==VerifyCode2) 
 631   2                 {  
 632   3                              f_debug=1;
 633   3                 }
 634   2                 else if(Packet[0]==VerifyCode2 && Packet[1]==VerifyCode1 && Packet[2]==VerifyCode0)
 635   2                 {
 636   3                              f_read=1;
 637   3                 }
 638   2                 else if(Packet[0]==VerifyCode1 && Packet[1]==VerifyCode0 && Packet[2]==VerifyCode2)
 639   2                 {
 640   3                              f_para=1;
 641   3                 }
 642   2                 else if(Packet[0]==VerifyCode0 && Packet[1]==VerifyCode2 && Packet[2]==VerifyCode1)
 643   2                 {
 644   3                              f_down=1;
 645   3                 }
 646   2                 else if(Packet[0]==VerifyCode2 && Packet[1]==VerifyCode0 && Packet[2]==VerifyCode1)
 647   2                 {
 648   3                              f_init=1;
 649   3                 }
 650   2                 else 
 651   2                 {
 652   3                              f_other=1;
 653   3                 }
 654   2         }
 655   1      
 656   1         if (INTVAL & TX_COMPLETE)
 657   1         {                       
 658   2                      
 659   2         }
 660   1            
 661   1         if (INTVAL & DEV_SUSPEND)
 662   1         {
 663   2              Suspend_Device();
 664   2         }
 665   1      
 666   1         if (INTVAL & DEV_CONFIGURED)
 667   1         {
 668   2             MCU_Init();
 669   2         }
 670   1      
 671   1         if (INTVAL & DEVICE_OPEN)
C51 COMPILER V9.01   MAIN                                                                  05/28/2019 16:58:51 PAGE 12  

 672   1         {
 673   2             BlockWrite(0,COL-1,0,ROW-1);
 674   2         }
 675   1      
 676   1         if (INTVAL & DEVICE_CLOSE)
 677   1         {
 678   2             pic=pic+1;
 679   2             BlockWrite(0,COL-1,0,ROW-1);
 680   2         }
 681   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2282    ----
   CONSTANT SIZE    =     80    ----
   XDATA SIZE       =     64      88
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
